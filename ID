import javax.imageio.ImageIO;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;

public class ID extends JFrame {
    Clip clip;

    public ID() {
        IDFrame();
        cursor();
    }

    public void cursor() {
        Toolkit tk = Toolkit.getDefaultToolkit();
        Image cursorimage = tk.getImage("src/img/cursor.png");
        Point point = new Point(10, 10);
        Cursor cursor = tk.createCustomCursor(cursorimage, point, "");
        this.setCursor(cursor);
    }

    public void IDFrame() {
        Font font = new Font("고양체", Font.BOLD, 12);
        try {
            setTitle("ID");
            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            setSize(505, 519);
            setLocationRelativeTo(null);

            BufferedImage image = ImageIO.read(new File("src/img/background.png"));
            setContentPane(new JLabel(new ImageIcon(image)));

            setLayout(new GridBagLayout());

            JPanel idPanel = new JPanel();
            idPanel.setOpaque(false);
            idPanel.setLayout(new BorderLayout()); // Use BorderLayout

            JLabel idLabel = new JLabel("ID (MAX10)");
            idLabel.setFont(font);
            idPanel.add(idLabel, BorderLayout.NORTH); // Add to NORTH position

            JTextField idTextField = new JTextField(10);
            idPanel.add(idTextField, BorderLayout.CENTER); // Add to CENTER position

            JButton confirmButton = new JButton("확인");
            confirmButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    String id = idTextField.getText();

                    if (id.isEmpty()) {
                        if (clip != null && clip.isRunning()) {
                            clip.stop();
                            clip.close();
                        }
                        setVisible(false);
                        new ID();
                    } else {
                        setVisible(false);
                        new gameStart();
                    }

                    playSound("bgm/1127810D49BC9CA38B.wav");
                    idTextField.setText("");
                    setVisible(false);

                    try {
                        Connection conn;
                        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_member?serverTimezone=UTC", "root", "1234");
                        System.out.println("데이터베이스 연결 성공");

                        String sql = "INSERT INTO information (UserName) VALUES (?)";

                        try (PreparedStatement preparedStatement = conn.prepareStatement(sql)) {
                            preparedStatement.setString(1, id);
                            preparedStatement.executeUpdate();
                            System.out.println("데이터베이스에 이름이 저장되었습니다.");
                        }

                        conn.close();
                    } catch (Exception ex) {
                        System.out.println("오류:" + ex);
                    }
                }
            });

            confirmButton.setBounds(202, 234, 100, 50);

            idPanel.add(confirmButton, BorderLayout.SOUTH); 

            GridBagConstraints gbc = new GridBagConstraints();
            gbc.gridx = 0;
            gbc.gridy = 0;
            gbc.weighty = 1.0;
            gbc.anchor = GridBagConstraints.CENTER;
            add(idPanel, gbc);

            setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void playSound(String soundFilePath) {
        try {
            File soundFile = new File(soundFilePath);
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(soundFile);

            clip = AudioSystem.getClip();
            clip.open(audioInputStream);
            clip.start();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        new ID();
    }
}
