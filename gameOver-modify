package BeMyCafe;

import java.awt.*;
import java.awt.image.BufferedImage;
import javax.swing.*;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class gameOver extends JFrame {
	JButton restartbt;// 재시작 버튼
	BufferedImage img = null;// 버퍼(메모리)에 이미지 올릴 때 쓰임

	public gameOver() {
		gameoverFrame();
		cursor();
	}

	public void gameoverFrame() {
		ImageIcon score = new ImageIcon("images/score.png");// 스코어 배경 이미지
		restartbt = new JButton(new ImageIcon("images/restart-bt.png"));// 재시작 버튼 이미지

		Font font = new Font("고양체", Font.BOLD, 28);

		setTitle("Be My Cafe"); // 프레임 타이틀
		setSize(922, 519); // 프레임 크기
		setResizable(false); // 사이즈 재조정 불가능
		setLocationRelativeTo(null); // 창이 가운데에 뜨도록 함
		setDefaultCloseOperation(EXIT_ON_CLOSE); // 창을 끄면 프로그램을 종료
		setLayout(null);


		JPanel Panel1 = new JPanel() {
			public void paintComponent(Graphics g) {
				g.drawImage(score.getImage(), 0, 0, 922, 519, null);
				// 재시작 버튼
				restartbt.setBounds(340, 358, 241, 101);// 재시작 버튼 사이즈
				restartbt.setBorder(null);// gameover 프레임에 재시작 버튼 넣기
				// 최종 스코어 라벨
				JLabel fscore = new JLabel(); // 최종 스코어 라벨 생성
				fscore.setBounds(340, 30, 241, 30);// 최종 스코어 위치 설정
				fscore.setText("최종 스코어");// 최종 스코어 텍스트 출력
				fscore.setFont(font);// 최종 스코어 텍스트에 고양체 적용
				fscore.setHorizontalAlignment(JLabel.CENTER);// 수평 가운데 정렬
				add(fscore);// 라벨 추가

				JLabel gameScoreLabel = new JLabel(); // 최종 스코어 라벨 생성
				gameScoreLabel.setBounds(340, 60, 241, 30);// 최종 스코어 위치 설정
				gameScoreLabel.setText(gameStart.gameScore + "");// 최종 스코어 텍스트에 고양체 적용
				gameScoreLabel.setFont(font);// 최종 스코어 텍스트에 고양체 적용
				gameScoreLabel.setHorizontalAlignment(JLabel.CENTER);// 수평 가운데 정렬
				add(gameScoreLabel);// 라벨 추가


				add("Center", restartbt);
			}
		};
		Panel1.setBounds(0, 0, 922, 519);

		add(Panel1); // 스코어 페이지 추가

		setVisible(true);

		// 재시작 버튼 클릭 시
		restartbt.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				setVisible(false); // 창 안보이게
				new gameStart();
			}
		});
	}

	public void cursor() {
		Toolkit tk = Toolkit.getDefaultToolkit();
		Image cursorimage = tk.getImage("images/cursor.png");
		Point point = new Point(10, 10);
		Cursor cursor = tk.createCustomCursor(cursorimage, point, "");

		this.setCursor(cursor);
	}}
